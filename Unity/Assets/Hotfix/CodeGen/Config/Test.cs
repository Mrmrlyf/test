//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class Test :  Bright.Config.BeanBase 
{
    public Test(JSONNode _json) 
    {
        { if(!_json["key1"].IsNumber) { throw new SerializationException(); }  Key1 = _json["key1"]; }
        { if(!_json["key2"].IsNumber) { throw new SerializationException(); }  Key2 = _json["key2"]; }
        { var __json0 = _json["rewards"]; if(!__json0.IsArray) { throw new SerializationException(); } Rewards = new System.Collections.Generic.List<Reward>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { Reward __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = Reward.DeserializeReward(__e0);  }  Rewards.Add(__v0); }   }
        PostInit();
    }

    public Test(int key1, int key2, System.Collections.Generic.List<Reward> rewards ) 
    {
        this.Key1 = key1;
        this.Key2 = key2;
        this.Rewards = rewards;
        PostInit();
    }

    public static Test DeserializeTest(JSONNode _json)
    {
        return new Test(_json);
    }

    public int Key1 { get; private set; }
    public int Key2 { get; private set; }
    /// <summary>
    /// 奖励列表
    /// </summary>
    public System.Collections.Generic.List<Reward> Rewards { get; private set; }

    public const int __ID__ = 2603186;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in Rewards) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Rewards) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Key1:" + Key1 + ","
        + "Key2:" + Key2 + ","
        + "Rewards:" + Bright.Common.StringUtil.CollectionToString(Rewards) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
